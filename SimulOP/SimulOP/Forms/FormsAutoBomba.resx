<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QDWRXhpZgAATU0AKgAAAAgAAwE7AAIAAAAUAAAAModpAAQAAAAB
        AAAARpydAAEAAAAoAAAApgAAAABSYWZhZWwgQWx2ZXMgVGVycmFzAAAEkAMAAgAAABQAAAB8kAQAAgAA
        ABQAAACQkpEAAgAAAAM2NwAAkpIAAgAAAAM2NwAAAAAAADIwMTg6MDM6MDQgMTU6NTc6MzMAMjAxODow
        MzowNCAxNTo1NzozMwAAAFIAYQBmAGEAZQBsACAAQQBsAHYAZQBzACAAVABlAHIAcgBhAHMAAAD/2wBD
        AAcFBQYFBAcGBQYIBwcIChELCgkJChUPEAwRGBUaGRgVGBcbHichGx0lHRcYIi4iJSgpKywrGiAvMy8q
        MicqKyr/2wBDAQcICAoJChQLCxQqHBgcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
        KioqKioqKioqKioqKir/wAARCACxAOoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6
        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
</value>
  </data>
</root>